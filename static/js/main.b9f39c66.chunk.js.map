{"version":3,"sources":["Components/BreakAndSession.js","Components/Timer.js","Components/ClockController.js","Components/Pomodoro_Clock.js","HandleUpdate/handleDisplay.js","HandleUpdate/setSessionAndBreak.js","index.js"],"names":["BreakAndSession","props","id","style","marginRight","onClick","handleClick","className","breakTime","marginLeft","sessionTime","Timer","timeFormat","time","mm","toString","ss","isSession","src","ClockController","countDown","reset","PomodoroClock","state","start","timeLeft","changeBreakAndSession","bind","playAlram","play","audio","document","querySelector","pause","currentTime","clearInterval","this","intervalID","setState","setInterval","prevState","tmp","preMM","parseInt","preSS","newIsSession","handleDisplay","newMM","newSS","color","event","name","currentTarget","split","type","setSessionAndBreak","React","Component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.b9f39c66.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../ComponentsStyles/BreakAndSession.scss\";\r\nfunction BreakAndSession(props) {\r\n  return (\r\n    <div id=\"break-session-container\">\r\n      <div id=\"break\">\r\n        <p id=\"break-label\">Break Length</p>\r\n        <div id=\"break-controller\">\r\n          <button\r\n            id=\"break-decrement\"\r\n            style={{ marginRight: 5 }}\r\n            onClick={props.handleClick}\r\n          >\r\n            <i className=\"fa fa-arrow-down fa-2x\"></i>\r\n          </button>\r\n          <span id=\"break-length\">{props.breakTime}</span>\r\n          <button\r\n            id=\"break-increment\"\r\n            style={{ marginLeft: 5 }}\r\n            onClick={props.handleClick}\r\n          >\r\n            <i className=\"fa fa-arrow-up fa-2x\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div id=\"session\">\r\n        <p id=\"session-label\">Session Length</p>\r\n        <div id=\"session-controller\">\r\n          <button\r\n            id=\"session-decrement\"\r\n            style={{ marginRight: 5 }}\r\n            onClick={props.handleClick}\r\n          >\r\n            <i className=\"fa fa-arrow-down fa-2x\"></i>\r\n          </button>\r\n          <span id=\"session-length\">{props.sessionTime}</span>\r\n          <button\r\n            id=\"session-increment\"\r\n            style={{ marginLeft: 5 }}\r\n            onClick={props.handleClick}\r\n          >\r\n            <i className=\"fa fa-arrow-up fa-2x\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default BreakAndSession;\r\n","import React from \"react\";\r\nimport \"../ComponentsStyles/Timer.scss\";\r\nexport default function Timer(props) {\r\n  let mmFormat =\r\n    props.time.mm >= 10 ? props.time.mm : \"0\" + props.time.mm.toString();\r\n  let ssFormat =\r\n    props.time.ss >= 10 ? props.time.ss : \"0\" + props.time.ss.toString();\r\n  let timeFormat = mmFormat + \":\" + ssFormat;\r\n  return (\r\n    <div id=\"timer\">\r\n      <p id=\"timer-label\" style={props.style}>\r\n        {props.isSession ? \"Session\" : \"Break\"}\r\n      </p>\r\n      <p id=\"time-left\" style={props.style}>\r\n        {timeFormat}\r\n      </p>\r\n      <audio\r\n        id=\"beep\"\r\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n      ></audio>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../ComponentsStyles/ClockController.scss\";\r\nexport default function ClockController(props) {\r\n    return (\r\n        <div id=\"clock-controller\">\r\n            <button id=\"start_stop\" onClick={props.countDown} >\r\n                <i className=\"fa fa-play fa-2x\"></i>\r\n                <i className=\"fa fa-pause fa-2x\"></i>\r\n            </button>\r\n            <button id=\"reset\" onClick={props.reset}>\r\n                <i className=\"fa fa-refresh fa-2x\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"../ComponentsStyles/Pomodoro_Clock.scss\";\r\nimport BreakAndSession from \"./BreakAndSession.js\";\r\nimport Timer from \"./Timer\";\r\nimport ClockController from \"./ClockController.js\";\r\nimport setSessionAndBreak from \"../HandleUpdate/setSessionAndBreak.js\";\r\nimport handleDisplay from \"../HandleUpdate/handleDisplay.js\";\r\nclass PomodoroClock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      start: false,\r\n      style: {},\r\n      isSession: true,\r\n      sessionTime: 25,\r\n      breakTime: 5,\r\n      timeLeft: { mm: 25, ss: 0 },\r\n    };\r\n    this.changeBreakAndSession = this.changeBreakAndSession.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.playAlram = this.playAlram.bind(this);\r\n  }\r\n  playAlram(play) {\r\n    let audio = document.querySelector(\"#beep\");\r\n\r\n    if (play) audio.play();\r\n    else {\r\n      audio.pause();\r\n      audio.currentTime = 0;\r\n    }\r\n  }\r\n  reset() {\r\n    clearInterval(this.intervalID);\r\n    this.playAlram(false);\r\n    this.setState({\r\n      start: false,\r\n      style: {},\r\n      isSession: true,\r\n      sessionTime: 25,\r\n      breakTime: 5,\r\n      timeLeft: { mm: 25, ss: 0 },\r\n    });\r\n  }\r\n  countDown() {\r\n    if (this.state.start) {\r\n      clearInterval(this.intervalID);\r\n      this.setState({ start: false });\r\n    } else {\r\n      this.setState({ start: true });\r\n      this.intervalID = setInterval(() => {\r\n        this.setState((prevState) => {\r\n          let tmp = handleDisplay(prevState);\r\n          let [newMM, newSS, newIsSession] = [...tmp];\r\n          if (newMM === 0 && newSS === 0) this.playAlram(true);\r\n          return {\r\n            timeLeft: {\r\n              mm: newMM,\r\n              ss: newSS,\r\n            },\r\n            style: newMM === 0 ? { color: \"red\" } : {},\r\n            isSession: newIsSession,\r\n          };\r\n        });\r\n      }, 1000);\r\n    }\r\n  }\r\n  changeBreakAndSession(event) {\r\n    let name = event.currentTarget.id.split(\"-\")[0] + \"Time\";\r\n    let type = event.currentTarget.id.split(\"-\")[1];\r\n    if (!this.state.start)\r\n      this.setState((prevState) => {\r\n        return setSessionAndBreak(prevState, name, type);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"clock\">\r\n        <p id=\"clock-label\">Pomodoro Clock</p>\r\n        <BreakAndSession\r\n          sessionTime={this.state.sessionTime}\r\n          breakTime={this.state.breakTime}\r\n          handleClick={this.changeBreakAndSession}\r\n        />\r\n        <Timer\r\n          time={this.state.timeLeft}\r\n          isSession={this.state.isSession}\r\n          style={this.state.style}\r\n        />\r\n        <ClockController countDown={this.countDown} reset={this.reset} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PomodoroClock;\r\n","export default function handleDisplay(prevState) {\r\n  let preMM = parseInt(prevState.timeLeft.mm);\r\n  let preSS = parseInt(prevState.timeLeft.ss);\r\n  let newIsSession = prevState.isSession;\r\n  if (preSS === 0) {\r\n    if (preMM === 0) {\r\n      newIsSession = !prevState.isSession;\r\n      return [\r\n        newIsSession ? prevState.sessionTime : prevState.breakTime,\r\n        0,\r\n        newIsSession,\r\n      ];\r\n    }\r\n    return [preMM - 1, 59, newIsSession];\r\n  }\r\n  return [preMM, preSS - 1, newIsSession];\r\n}\r\n","export default function setSessionAndBreak(prevState, name, type) {\r\n  if (type === \"increment\" && prevState[name] === 60) return {};\r\n  if (type === \"decrement\" && prevState[name] === 1) return {};\r\n  if (name === \"breakTime\")\r\n    return {\r\n      breakTime: prevState.breakTime + (type === \"increment\" ? 1 : -1),\r\n    };\r\n  else\r\n    return {\r\n      sessionTime: prevState.sessionTime + (type === \"increment\" ? 1 : -1),\r\n      timeLeft: {\r\n        mm: prevState.sessionTime + (type === \"increment\" ? 1 : -1),\r\n        ss: 0,\r\n      },\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PomodoroClock from \"./Components/Pomodoro_Clock.js\";\r\nimport \"./index.scss\";\r\nclass App extends React.Component {\r\n    render() {\r\n        return <PomodoroClock />\r\n    }\r\n}\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}